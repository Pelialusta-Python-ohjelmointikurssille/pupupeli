/* variables */
:root {
    --canvas-width: 768px;
    --canvas-height: var(--canvas-width);

    --color-background: rgb(255, 255, 255);
    --color-primary: rgb(221, 221, 221);
    --color-secondary: rgb(231, 231, 231);

    --color-multiple-choice: rgb(255, 255, 255);
    --color-completed-task: rgb(0, 255, 0);
    --color-currently-executing-line: rgba(255, 255, 0, 0.5);

    --color-button: rgb(255, 255, 255);
    --color-text: rgb(0, 0, 0);
    --color-border: rgb(0, 0, 0);
    --color-divider: rgb(0, 0, 0, 0.25);

    --filter-less-bright: brightness(0.75);
    --filter-less-bright-2: brightness(0.85);

    --default-margin: 1rem;
    --default-border-radius: 5px;
}

/* tags */
body {
    font-family: 'Courier New', Courier, monospace;
    margin: var(--default-margin);
}

h1 {
    margin: unset;
}

h2 {
    margin: unset;
    margin-bottom: var(--default-margin);
}

p {
    display: block;
    margin-block-start: 5px;
    margin-block-end: 0em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    unicode-bidi: isolate;
}

button {
    display: inline-flex;
    align-items: center;
    padding: 5px 10px;
    font-size: 1rem;
    cursor: pointer;
    border: 1px solid var(--color-border);
    border-radius: var(--default-border-radius);
    background-color: var(--color-button);
}

button ~ button {
    margin-left: var(--default-margin);
}

button:hover {
    background: var(--color-secondary)
}

/* most used classes */
.box {
    background-color: var(--color-primary);
    border-radius: var(--default-border-radius);
    border: 1px solid var(--color-border);
}

.is-flex {
    display: flex;
}

.is-flex-1 {
    flex: 1;
}

.is-hidden {
    display: none !important;
}

/* less used classes */
.multiple-choice-question {
    background-color: var(--color-multiple-choice);
    box-shadow: 5px 5px 3px rgba(0, 0, 0, 0.1);
    border-radius: var(--default-border-radius);
    padding: 0.5rem;
    text-align: center;
    cursor: pointer;
}

.multiple-choice-question:hover {
    filter: var(--filter-less-bright);
}

.selected-choice {
    filter: var(--filter-less-bright);
}

.show-error {
    transition: 0.5s all ease-in-out;
    padding: 1rem !important;
}

.button-completed {
    background-color: var(--color-completed-task);
}

.button-completed:hover {
    background-color: var(--color-completed-task);
    filter: var(--filter-less-bright-2);
}

.button-current-task, .button-current-chapter {
    filter: var(--filter-less-bright);
}

.ace_marker-layer .executing-line {
    background: var(--color-currently-executing-line);
    position: absolute;
    z-index: 1000;
}

.pop-up-notification-show, .pop-up-notification-show-login {
    display: block !important;
}

.pop-up-notification-show {
    animation: popup-show-anim;
    animation-duration: 3s;
}

@keyframes popup-show-anim {
    0% {transform: scaleX(0);}
    10% {transform: scaleX(1);}
    100% {transform: scaleX(1);}
}

.pop-up-notification-show-login {
    animation: popup-show-anim-login;
    animation-duration: 6s;
}

@keyframes popup-show-anim-login {
    0% {transform: scaleX(0);}
    10% {transform: scaleX(1);}
    90% {transform: scaleX(1);}
    100% {transform: scaleX(0);}
}

.celebration-confetti {
    position: absolute;
    top: -10px;
    width: 10px;
    height: 30px;
    background-color: var(--color, red); /* Default color */
    opacity: 0;
    animation: fall 3s ease-out forwards;
}

@keyframes fall {
    0% {
        opacity: 1;
        transform: translateY(0);
    }
    100% {
        opacity: 0;
        transform: translateY(100vh) rotate(360deg);
    }
}

.game-layered {
    display: grid;
    justify-items: center;
    align-items: end;
}

.game-layered > * {
    grid-column-start: 1;
    grid-row-start: 1;
}

#settings-top {
    display: flex;
    flex-direction: column;
    gap: 10px; /* Adjust the gap value as needed */
}

.settings-unit-top {
    display: flex;
    align-items: center;
    justify-content: space-between; /* Ensures space between elements */
    border: 1px solid var(--color-border); /* Adds a solid border */
    border-radius: var(--default-border-radius); /* Adds rounded corners */
    padding: 10px; /* Adds some padding inside the border */
    margin: 10px; /* Adds some margin to separate it from other elements */

}

.settings-unit-top h2 {
    margin: unset; /* Example: Remove default padding */
    margin-top: 5px;
}

.settings-unit-bottom {
    border: 1px solid var(--color-border); /* Adds a solid border */
    border-radius: var(--default-border-radius); /* Adds rounded corners */
    padding: 10px; /* Adds some padding inside the border */
    margin: 10px 0; /* Adds some margin to separate it from other elements */
}

.center-content {
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}
.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
  }
  
  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }
  
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
  }
  
  .slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
  }
  
  input:checked + .slider {
    background-color: #2196F3;
  }
  
  input:checked + .slider:before {
    transform: translateX(26px);
  }
  
  .slider.round {
    border-radius: 34px;
  }
  
  .slider.round:before {
    border-radius: 50%;
  }

/* identifiers */
#app {
    position: relative; /* This makes the #app div a positioning context for absolutely positioned children */
    flex-direction: row;
    justify-content: center;
    align-items: center;
    margin-bottom: var(--default-margin);
}

#left-container, #editor-container {
    flex-direction: column;
}

#left-container, #right-container {
    min-width: var(--canvas-width);
    justify-content: space-between;
}

#left-container {
    max-width: var(--canvas-width);
    margin: var(--default-margin) 0 var(--default-margin) var(--default-margin);
}
    
#right-container {
    min-height: var(--canvas-height);
    margin: var(--default-margin) var(--default-margin) var(--default-margin) 0;
}

#header {
    flex-direction: row;
    justify-content: center;
    align-items: center;
    margin-bottom: var(--default-margin);
}

#header-container {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    width: calc(var(--canvas-width) * 2.5 - 2rem);
    min-height: 3.25rem;
    padding: 0.5rem 1rem 0.5rem 1rem;
}

#game-container {
    min-width: var(--canvas-width);
}

#game {
    max-height: var(--canvas-width);
    max-width: var(--canvas-height);
    border: 1px solid var(--color-border);
    border-radius: var(--default-border-radius);
    box-sizing: border-box;
}

#input-box-container {
    margin-bottom: 48px;
    display: grid;
}

#input-box {
    padding: calc(var(--default-margin) / 4);
    min-width: calc(var(--canvas-width) - calc(var(--canvas-width) / 3));
    border: 1px solid var(--color-border);
    border-radius: var(--default-border-radius);
    font-size: 1.125rem;
    grid-column-start: 1;
    grid-row-start: 1;
}

#input-box-send-button {
    margin-left: calc(var(--default-margin) / 4);
    padding: calc(var(--default-margin) / 2);
    align-self: center;
    grid-column-start: 2;
    grid-row-start: 1;
}

/* This one includes both task header and toggle buttons div, we want them on the same level */
#task-name-div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--default-margin); /* Optional: add some space below the task name div */
    border-bottom: 2px solid var(--color-divider);
    padding-bottom: calc(var(--default-margin) / 2);
}

#toggle-buttons-div {
    display: flex;
}

#user-container {
    min-height: 2rem;
}

#username, #password {
    min-height: 100%;
    margin: 0 0.5rem;
}

#header-buttons {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 0.875rem;
}

#app-container, #instructions-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--default-margin);
    max-width: calc(var(--canvas-width) * 2.5);
}

#left-instructions-container {
    display: flex;
    flex-direction: column;
    margin: 1rem 0rem 1rem 1rem;
    width: var(--canvas-width);
    max-height: 768px;
    overflow-y: auto;
}

#right-instructions-container {
    flex-direction: column;
    display: flex;
    justify-content: center;
    align-items: center;
}

#instruction-head {
    font-size: 1.5rem;
    margin-bottom: var(--default-margin);
}

#instruction-desc {
    white-space: pre-wrap;
}

#task-selector-container {
    flex-direction: row;
    justify-content: center;
    margin: auto;
    max-width: calc((var(--canvas-width) * 2.115));
}

#buttonTable {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

#task-selector-box button {
    justify-content: center;
    font-size: 1.5rem;
    padding: 1rem;
    margin: 0 calc(var(--default-margin) / 4) var(--default-margin) calc(var(--default-margin) / 4);
    width: 3.5rem;
    height: 3.5rem;
}

#previous-task button, #next-task button {
    font-size: 1.5rem;
    height: 3.5rem;
    margin: 0 var(--default-margin);
    min-width: 13.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

#editor {
    border-radius: var(--default-border-radius);
    min-height: 17.125rem;
    border: 1px solid var(--color-border);
    resize: vertical;
}

#error-box {
    transition: 0.5s all ease-in-out;
    min-height: 1rem;
    padding: 0rem;
}

#error {
    word-wrap: break-word;
    color: red;
    text-align: center;
    padding: 0.1rem;
}

#warning {
    word-wrap: break-word;
    color: rgb(0, 0, 255);
    text-align: center;
    padding: 0.1rem;
}

#grid-toggle-button, #theme-select, #login-button, #trail-toggle-button {
    float: right;
    min-height: 2rem;
    min-width: calc(10% - 1rem);
    border-radius: var(--default-border-radius);
}

#theme-select {
    margin-right: var(--default-margin);
}

#task-title {
    width: 100%;
}

#task-description {
    padding: 0rem 1rem 0rem 1rem;
}

#run-icon {
    width: 2rem;
    height: 2rem;
    margin-left: -6px;
}

#editor-stop-button {
    float: right;
}

#logout-button {
    margin-left: var(--default-margin);
}

#multiple-choice-questions {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--default-margin);
    margin: calc(var(--default-margin) * 2.5) var(--default-margin) var(--default-margin) var(--default-margin);
    padding: 0;
}

#login-failed, #condition-failed, #task-not-found {
    display: none;
    position: absolute;
    top: calc(6rem - 1px);
    right: var(--default-margin);
    padding: 1rem;
    z-index: 99;
}

#celebration{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* This ensures the center of #celebration-content, not its top-left corner, is at the center of #app */
    padding: 1rem;
    background-color: #248944;
    color: white;
    border-radius: var(--default-border-radius);
    font-size: 1.5rem;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    text-align: center;
    z-index: 1000;
}

#celebration-confetti-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* Ensures the confettis do not block user interactions */
    overflow: hidden;
    z-index: 1000; /* Ensures the confettis appear on top of other content */
}

#settings-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    overflow: hidden;
    z-index: 1002;
}

#settings-container.visible {
    pointer-events: auto; /* Enable pointer events when visible */
}

#overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
    z-index: 1001; /* Ensure it is below the settings window but above other content */
    display: none; /* Initially hidden */
    pointer-events: none; /* Prevent clicks */
}

#overlay.is-visible {
    display: block;
    pointer-events: auto; /* Enable clicks when visible */
}

#settings-header {
    display: flex;
    justify-content: center;
    align-items: center;
}

#settings-window {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 400px; /* Adjust as needed */
    background-color: var(--color-background);
    border-radius: var(--default-border-radius);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    z-index: 1000;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    pointer-events: auto; /* Ensure the settings window itself is clickable */
    max-height: 100vh; /* Ensure it doesn't exceed the viewport height */
}

#settings-box {
    display: flex;
    flex-direction: column;
    width: 370px; /* Adjust as needed */
    padding: 1rem;
    position: relative; /* Ensure it can position children absolutely */
    flex-grow: 1; /* Allow it to grow and fill the available space */
}

#settings-content {
    display: flex;
    flex-direction: column;
    height: 100%;
    overflow-y: auto;
}

#settings-bottom {
    display: flex;
    flex-direction: column;
    justify-content: bottom;
    margin-top: auto; /* Push to the bottom */
    padding-top: 1rem; /* Optional: Add some padding at the top */
}

#close-settings {
    display: flex; /* Use Flexbox */
    justify-content: center; /* Center horizontally */
    padding-top: 1rem;
    align-items: center; /* Center vertically */
    height: 100%; /* Ensure it takes the full height of the parent */
}

#input-container {
    margin-top: var(--default-margin);
    padding: 0.5rem;
    border: 1px solid var(--color-primary);
    border-radius: var(--default-border-radius);
    background-color: rgb(249, 249, 249);
    max-height: 200px;
    overflow-y: auto;
}

#input-container div {
    padding: 0.25rem 0;
    border-bottom: 1px solid rgb(238, 238, 238);
}

#input-container div:last-child {
    border-bottom: none;
}

#chapter-selector-container, #chapter-selector-box, #chapterbuttontable {
  justify-content: center;
  align-items: center;
}

/* media queries */
@media (max-width: calc((768px * 2) + 3rem)) {
    #app-container, #instructions-container {
        grid-template-columns: 1fr;
        gap: unset;
    }

    #editor {
        margin: 0 var(--default-margin);
    }

    #task-selector-box {
        max-width: calc((var(--canvas-width) * 0.775));
    }

    #game {
        max-width: unset;
        max-height: unset;
    }

    #task-container {
        margin: var(--default-margin);
    }

    #left-container, #right-container {
        max-width: unset;
        margin: unset;
        margin-bottom: var(--default-margin);
    }

    .editor-button {
        margin-left: var(--default-margin);
    }
}